plugins {
	id 'org.springframework.boot' version '3.0.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'java'
	
	// Spotless plugin
	id "com.diffplug.spotless" version "6.9.0"
	// Jib plugin
	id 'com.google.cloud.tools.jib' version '3.2.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'


//The simplest image definition  
jib {
	to{
		image = 'limitium/cicd-demo'
	}
	from {
		image = 'openjdk:17-slim@sha256:aaa3b3cb27e3e520b8f116863d0580c438ed55ecfa0bc126b41f68c3f62f9774'
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	testImplementation "org.junit.jupiter:junit-jupiter:5.8.2"
	testImplementation "org.testcontainers:testcontainers:1.17.3"
	testImplementation "org.testcontainers:junit-jupiter:1.17.3"
}

tasks.named('test') {
	useJUnitPlatform()
}

//Define format rules
spotless {
	// optional: limit format enforcement to just the files changed by this feature branch
	ratchetFrom 'origin/master'

	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '*.md', '.gitignore'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}
	java {
		// apply a specific flavor of google-java-format
		googleJavaFormat('1.12.0').aosp().reflowLongStrings()
	}
}
